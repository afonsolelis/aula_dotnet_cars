name: 'VolksApi'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest

    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - name: "Set Dotnet"
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
    
    - name: "Restore dependencies"  
      run: dotnet restore

    - name: "Build api"  
      run: dotnet build --configuration Release
      
  test:
   name: Unit Test
   runs-on: ubuntu-latest
   needs: build
   steps:
    - name: "Checkout"
      uses: actions/checkout@v2
    
    - name: "Set Dotnet"
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
    
    - name: "Restore dependencies"  
      run: dotnet restore
    
    - name: "Run unit test"
      run: dotnet test --no-build --verbosity normal
      
#  quality_code:
#    name: Sonar scan
#    runs-on: ubuntu-latest
#    needs: test
#    steps:
#    - name: Checkout Repository
#      uses: actions/checkout@v2
    
#    - name: Install sonar tool
#      run: dotnet tool install --global dotnet-sonarscanner --version 6.2.0
  
#    - name: Set up JDK 11
#      uses: actions/setup-java@v2
#      with:
#        distribution: 'adopt'
#        java-version: '21'

#    - name: Analyze with SonarCloud
#      id: sonar_analysis
#      run: |
#        dotnet sonarscanner begin /o:"afonsolelis" /k:"afonsolelis_aula_dotnet_cars" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
#        dotnet build --configuration Release
#        dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
           service-id: ${{ secrets.RENDER_SERVICE_ID }}
           api-key: ${{ secrets.RENDER_API_KEY }}
      

   
